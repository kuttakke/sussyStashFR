// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.0.0-dev.29.

// Section: imports

use super::*;
use flutter_rust_bridge::for_generated::byteorder::{NativeEndian, ReadBytesExt, WriteBytesExt};
use flutter_rust_bridge::for_generated::transform_result_dco;
use flutter_rust_bridge::{Handler, IntoIntoDart};

// Section: boilerplate

flutter_rust_bridge::frb_generated_boilerplate_io!();

// Section: dart2rust

impl CstDecode<String> for *mut wire_cst_list_prim_u_8_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> String {
        let vec: Vec<u8> = self.cst_decode();
        String::from_utf8(vec).unwrap()
    }
}
impl CstDecode<Vec<u8>> for *mut wire_cst_list_prim_u_8_strict {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<u8> {
        unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        }
    }
}
impl CstDecode<Vec<crate::api::streamer_model::Streamer>> for *mut wire_cst_list_streamer {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::streamer_model::Streamer> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<Vec<crate::api::streamer_model::StreamerVideo>>
    for *mut wire_cst_list_streamer_video
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> Vec<crate::api::streamer_model::StreamerVideo> {
        let vec = unsafe {
            let wrap = flutter_rust_bridge::for_generated::box_from_leak_ptr(self);
            flutter_rust_bridge::for_generated::vec_from_leak_ptr(wrap.ptr, wrap.len)
        };
        vec.into_iter().map(CstDecode::cst_decode).collect()
    }
}
impl CstDecode<crate::api::streamer_model::Streamer> for wire_cst_streamer {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::streamer_model::Streamer {
        crate::api::streamer_model::Streamer {
            type_: self.type_.cst_decode(),
            name: self.name.cst_decode(),
            name_en: self.name_en.cst_decode(),
            icon: self.icon.cst_decode(),
            url: self.url.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::streamer_model::StreamerVideo> for wire_cst_streamer_video {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::streamer_model::StreamerVideo {
        crate::api::streamer_model::StreamerVideo {
            url: self.url.cst_decode(),
            title: self.title.cst_decode(),
            uploaded: self.uploaded.cst_decode(),
            cover: self.cover.cst_decode(),
            src: self.src.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::streamer_model::StreamerVideoResponse>
    for wire_cst_streamer_video_response
{
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::streamer_model::StreamerVideoResponse {
        crate::api::streamer_model::StreamerVideoResponse {
            ok: self.ok.cst_decode(),
            msg: self.msg.cst_decode(),
            videos: self.videos.cst_decode(),
        }
    }
}
impl CstDecode<crate::api::streamer_model::StreamersResponse> for wire_cst_streamers_response {
    // Codec=Cst (C-struct based), see doc to use other codecs
    fn cst_decode(self) -> crate::api::streamer_model::StreamersResponse {
        crate::api::streamer_model::StreamersResponse {
            ok: self.ok.cst_decode(),
            msg: self.msg.cst_decode(),
            streamers: self.streamers.cst_decode(),
        }
    }
}
impl NewWithNullPtr for wire_cst_streamer {
    fn new_with_null_ptr() -> Self {
        Self {
            type_: Default::default(),
            name: core::ptr::null_mut(),
            name_en: core::ptr::null_mut(),
            icon: core::ptr::null_mut(),
            url: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_streamer {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_streamer_video {
    fn new_with_null_ptr() -> Self {
        Self {
            url: core::ptr::null_mut(),
            title: core::ptr::null_mut(),
            uploaded: core::ptr::null_mut(),
            cover: core::ptr::null_mut(),
            src: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_streamer_video {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_streamer_video_response {
    fn new_with_null_ptr() -> Self {
        Self {
            ok: Default::default(),
            msg: core::ptr::null_mut(),
            videos: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_streamer_video_response {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}
impl NewWithNullPtr for wire_cst_streamers_response {
    fn new_with_null_ptr() -> Self {
        Self {
            ok: Default::default(),
            msg: core::ptr::null_mut(),
            streamers: core::ptr::null_mut(),
        }
    }
}
impl Default for wire_cst_streamers_response {
    fn default() -> Self {
        Self::new_with_null_ptr()
    }
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_wire_greet(
    name: *mut wire_cst_list_prim_u_8_strict,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_greet_impl(name)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_wire_init_app(port_: i64) {
    wire_init_app_impl(port_)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_wire_get_category(port_: i64, type_: i32) {
    wire_get_category_impl(port_, type_)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_wire_get_more_videos(
    port_: i64,
    url: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_more_videos_impl(port_, url)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_wire_get_videos(
    port_: i64,
    url: *mut wire_cst_list_prim_u_8_strict,
) {
    wire_get_videos_impl(port_, url)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_wire_StreamerType_to_string(
    that: i32,
) -> flutter_rust_bridge::for_generated::WireSyncRust2DartDco {
    wire_StreamerType_to_string_impl(that)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_cst_new_list_prim_u_8_strict(
    len: i32,
) -> *mut wire_cst_list_prim_u_8_strict {
    let ans = wire_cst_list_prim_u_8_strict {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(Default::default(), len),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(ans)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_cst_new_list_streamer(
    len: i32,
) -> *mut wire_cst_list_streamer {
    let wrap = wire_cst_list_streamer {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_streamer>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[no_mangle]
pub extern "C" fn frbgen_sussy_stash_cst_new_list_streamer_video(
    len: i32,
) -> *mut wire_cst_list_streamer_video {
    let wrap = wire_cst_list_streamer_video {
        ptr: flutter_rust_bridge::for_generated::new_leak_vec_ptr(
            <wire_cst_streamer_video>::new_with_null_ptr(),
            len,
        ),
        len,
    };
    flutter_rust_bridge::for_generated::new_leak_box_ptr(wrap)
}

#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_prim_u_8_strict {
    ptr: *mut u8,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_streamer {
    ptr: *mut wire_cst_streamer,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_list_streamer_video {
    ptr: *mut wire_cst_streamer_video,
    len: i32,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_streamer {
    type_: i32,
    name: *mut wire_cst_list_prim_u_8_strict,
    name_en: *mut wire_cst_list_prim_u_8_strict,
    icon: *mut wire_cst_list_prim_u_8_strict,
    url: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_streamer_video {
    url: *mut wire_cst_list_prim_u_8_strict,
    title: *mut wire_cst_list_prim_u_8_strict,
    uploaded: *mut wire_cst_list_prim_u_8_strict,
    cover: *mut wire_cst_list_prim_u_8_strict,
    src: *mut wire_cst_list_prim_u_8_strict,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_streamer_video_response {
    ok: bool,
    msg: *mut wire_cst_list_prim_u_8_strict,
    videos: *mut wire_cst_list_streamer_video,
}
#[repr(C)]
#[derive(Clone, Copy)]
pub struct wire_cst_streamers_response {
    ok: bool,
    msg: *mut wire_cst_list_prim_u_8_strict,
    streamers: *mut wire_cst_list_streamer,
}
